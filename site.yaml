- hosts: servers
  tasks:
  # Package Install and Configratoin Section
  - name: Update Exsited Packages
    become: yes
    apt: 
      update_cache: yes
      upgrade: yes    
  - name: Update Timezone
    become: yes
    shell: |
      timedatectl set-timezone Asia/Tokyo
  - name: Install Docker 
    become: yes
    shell: |
      apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      apt-get update
      apt-get -y install docker-ce docker-ce-cli containerd.io
      apt-mark hold docker-ce docker-ce-cli containerd.io
  - name: Install kubernetes packages
    become: yes    
    shell: |
      apt-get update 
      apt-get -y install apt-transport-https curl
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
      deb https://apt.kubernetes.io/ kubernetes-xenial main
      EOF
      apt-get update 
      apt-get -y install kubelet kubeadm kubectl
      apt-mark hold kubelet kubeadm kubectl  
  - name: Configure cgroup on Ubuntu for kubernetes
    become: yes
    shell: |
      cp /boot/firmware/nobtcmd.txt /boot/firmware/nobtcmd_old.txt
      sed -e 's/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1/' /boot/firmware/nobtcmd_old.txt > /boot/firmware/nobtcmd.txt

  # IP Address Section
  - name: Change IP address  
    become: yes    
    shell: |
      echo \
      'network:
        version: 2
        renderer: networkd
        ethernets:
          eth0:
            dhcp4: false
            dhcp6: false
            addresses:
              - '{{ changed_address }}'/24
            gateway4: '{{ gateway_address }}'
            nameservers:
              addresses:
                - '{{ gateway_address }}'' > /etc/netplan/99-network.yaml      
  
  # Hostname Section
  - name: Change a Hostname
    become: yes
    shell: |
      hostnamectl set-hostname '{{ hostname }}'

  # Reboot Section
  - name: Execute reboot
    become: yes
    shell: |
       sleep 2 && reboot
    async: 1
    poll: 0
  - name: Wait for SSH port down
    wait_for:
      host: '{{ changed_address }}'
      port: 22
      state: stopped
    delegate_to: 127.0.0.1
  - name: Wait for SSH port up
    wait_for:
      host: '{{ changed_address }}'
      port: 22
      state: started
    delegate_to: 127.0.0.1    
  - name: Debug
    debug:
      msg: Finish!